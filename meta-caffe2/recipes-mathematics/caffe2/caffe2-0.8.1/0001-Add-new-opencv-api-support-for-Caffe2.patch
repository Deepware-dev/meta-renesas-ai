From 4ec8ea754b629b2ee834877bec2a31378f36886c Mon Sep 17 00:00:00 2001
From: Jianming Qiao <jianming.qiao@bp.renesas.com>
Date: Thu, 19 Sep 2019 02:24:46 +0100
Subject: [PATCH] Add opencv 4.1.1 support for Caffe2

Use cv namespace for better compatibility for both OpenCV 3.x and 4.x
cv namespace is included in <imgcodecs.hpp>, which is common to all opencv version.

Signed-off-by: Jianming Qiao <jianming.qiao@bp.renesas.com>
---
 caffe2/binaries/make_image_db.cc | 2 +-
 caffe2/image/image_input_op.h    | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/caffe2/binaries/make_image_db.cc b/caffe2/binaries/make_image_db.cc
index 1904447..386d6fe 100644
--- a/caffe2/binaries/make_image_db.cc
+++ b/caffe2/binaries/make_image_db.cc
@@ -102,7 +102,7 @@ void ConvertImageDataset(
       // Need to do some opencv magic.
       cv::Mat img = cv::imread(
           input_folder + lines[item_id].first,
-          caffe2::FLAGS_color ? CV_LOAD_IMAGE_COLOR : CV_LOAD_IMAGE_GRAYSCALE);
+          caffe2::FLAGS_color ? cv::IMREAD_COLOR : cv::IMREAD_GRAYSCALE);
       // Do resizing.
       cv::Mat resized_img;
       int scaled_width, scaled_height;
diff --git a/caffe2/image/image_input_op.h b/caffe2/image/image_input_op.h
index 4940a41..9b42570 100644
--- a/caffe2/image/image_input_op.h
+++ b/caffe2/image/image_input_op.h
@@ -316,7 +316,7 @@ bool ImageInputOp<Context>::GetImageAndLabelAndInfoFromDBValue(
               datum.data().size(),
               CV_8UC1,
               const_cast<char*>(datum.data().data())),
-          color_ ? CV_LOAD_IMAGE_COLOR : CV_LOAD_IMAGE_GRAYSCALE);
+          color_ ? cv::IMREAD_COLOR : cv::IMREAD_GRAYSCALE);
     } else {
       // Raw image in datum.
       CAFFE_ENFORCE(datum.channels() == 3 || datum.channels() == 1);
@@ -379,7 +379,7 @@ bool ImageInputOp<Context>::GetImageAndLabelAndInfoFromDBValue(
               &encoded_size,
               CV_8UC1,
               const_cast<char*>(encoded_image_str.data())),
-          color_ ? CV_LOAD_IMAGE_COLOR : CV_LOAD_IMAGE_GRAYSCALE);
+          color_ ? cv::IMREAD_COLOR : cv::IMREAD_GRAYSCALE);
     } else if (image_proto.data_type() == TensorProto::BYTE) {
       // raw image content.
       int src_c = (image_proto.dims_size() == 3) ? image_proto.dims(2) : 1;
@@ -477,7 +477,7 @@ bool ImageInputOp<Context>::GetImageAndLabelAndInfoFromDBValue(
   if (out_c == src.channels()) {
     *img = src;
   } else {
-    cv::cvtColor(src, *img, (out_c == 1) ? CV_BGR2GRAY : CV_GRAY2BGR);
+    cv::cvtColor(src, *img, (out_c == 1) ? cv::COLOR_BGR2GRAY : cv::COLOR_GRAY2BGR);
   }
 
   // Note(Yangqing): I believe that the mat should be created continuous.
-- 
2.7.4

